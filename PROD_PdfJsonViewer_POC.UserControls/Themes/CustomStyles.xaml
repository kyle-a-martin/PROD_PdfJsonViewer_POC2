<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:faWPF="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">

    <!-- Built-in converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!-- Button Styles (using your provided SquareIconWithText definitions) -->
    <Style TargetType="Button" x:Key="ModernButton">
        <Setter Property="Background" Value="#00263d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="Button" x:Key="SquareIconButton">
        <Setter Property="Background" Value="#00263d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SquareIconWithTextButton">
        <Setter Property="Background" Value="#00263d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome"
                           Text="{TemplateBinding Tag}" 
                           FontSize="16"
                           VerticalAlignment="Center"
                           Margin="10,0,5,0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                  VerticalAlignment="Center" 
                                  Margin="5,0,10,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FolderOpenButtonStyle" TargetType="Button" BasedOn="{StaticResource SquareIconWithTextButton}">
        <Setter Property="Tag" Value="&#xf115;" />
        <Setter Property="Content" Value="Open" />
    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource SquareIconWithTextButton}">
        <Setter Property="Tag" Value="&#xf0c7;" />
        <Setter Property="Content" Value="Save" />
    </Style>

    <!-- Modern TextBox Style -->
    <Style TargetType="TextBox" x:Key="EditorTextBox">
        <Setter Property="Foreground" Value="#333" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderBrush" Value="#e0e0e0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="MaxWidth" Value="350" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="#007bff" />
                            <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for TextBlock - Left Aligned -->
    <Style x:Key="LeftAlignTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Modern ToggleButton Style -->
    <Style TargetType="ToggleButton" x:Key="ModernToggleButton">
        <Setter Property="Background" Value="#00263d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Tag" Value="&#xf204;" />

        <!-- Default to Toggle Off icon -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock x:Name="Icon" FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome"
                           Text="{TemplateBinding Tag}" 
                           FontSize="16"
                           VerticalAlignment="Center"
                           Margin="10,0,5,0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                  VerticalAlignment="Center" 
                                  Margin="5,0,10,0"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Text" Value="&#xf205;" />
                            <!-- Toggle On icon -->
                            <Setter Property="Background" Value="#007bff" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Text" Value="&#xf204;" />
                            <!-- Toggle Off icon -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for TextBlock -->
    <Style x:Key="StyledTextBlock" TargetType="TextBlock">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
    </Style>


    <!-- Icon DataTemplates -->
    <DataTemplate x:Key="CollapsedIconTemplate">
        <faWPF:ImageAwesome Icon="AngleRight" Width="16" Height="16"/>
    </DataTemplate>

    <DataTemplate x:Key="ExpandedIconTemplate">
        <faWPF:ImageAwesome Icon="AngleDown" Width="16" Height="16"/>
    </DataTemplate>
    
    <DataTemplate x:Key="BranchIconTemplate">
        <faWPF:ImageAwesome Icon="ObjectGroup" Width="16" Height="16"/>
    </DataTemplate>
    
    <DataTemplate x:Key="LeafIconTemplate">
        <faWPF:ImageAwesome Icon="LongArrowRight" Width="16" Height="16"/>
    </DataTemplate>

    <!-- TreeViewItem Style -->
    <Style TargetType="TreeViewItem">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Margin" Value="10,7,0,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ContentTemplate" Value="{StaticResource ExpandedIconTemplate}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="ContentTemplate" Value="{StaticResource CollapsedIconTemplate}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="PART_Header" 
                                          Grid.Column="1" 
                                          ContentSource="Header" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <ItemsPresenter x:Name="ItemsHost" 
                                        Grid.Row="1" 
                                        Grid.Column="1"
                                        Visibility="Visible"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeViewItem Style -->
    <Style TargetType="TreeViewItem" x:Key="NoExpandTreeViewItem">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                  ClickMode="Press"
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Margin" Value="10,7,0,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ContentTemplate" Value="{StaticResource BranchIconTemplate}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="ContentTemplate" Value="{StaticResource CollapsedIconTemplate}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="PART_Header" 
                                      Grid.Column="1" 
                                      ContentSource="Header" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <ItemsPresenter x:Name="ItemsHost" 
                                    Grid.Row="1" 
                                    Grid.Column="1"
                                    Visibility="Visible"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>