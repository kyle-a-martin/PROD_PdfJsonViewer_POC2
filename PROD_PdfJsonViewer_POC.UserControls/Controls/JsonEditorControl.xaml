<UserControl x:Class="PROD_PdfJsonViewer_POC.UserControls.Controls.JsonEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PROD_PdfJsonViewer_POC.UserControls.Controls"
             xmlns:vm="clr-namespace:PROD_PdfJsonViewer_POC.UserControls.ViewModels"
             xmlns:models="clr-namespace:PROD_PdfJsonViewer_POC.UserControls.Models"
             xmlns:converters="clr-namespace:PROD_PdfJsonViewer_POC.UserControls.Converters"
             xmlns:helper="clr-namespace:PROD_PdfJsonViewer_POC.UserControls.Helper"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!-- Built-in converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!-- Inverse of BooleanToVisibilityConverter -->
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <ResourceDictionary x:Key="Styles">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/JsonTreeItemTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <!-- Button Styles (using your provided SquareIconWithText definitions) -->
        <Style TargetType="Button" x:Key="ModernButton">
            <Setter Property="Background" Value="#00263d" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style TargetType="Button" x:Key="SquareIconButton">
            <Setter Property="Background" Value="#00263d" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="SquareIconWithTextButton">
            <Setter Property="Background" Value="#00263d" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="30" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome"
                                   Text="{TemplateBinding Tag}" 
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Margin="10,0,5,0"/>
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                          VerticalAlignment="Center" 
                                          Margin="5,0,10,0"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FolderOpenButtonStyle" TargetType="Button" BasedOn="{StaticResource SquareIconWithTextButton}">
            <Setter Property="Tag" Value="&#xf115;" />
            <Setter Property="Content" Value="Open" />
        </Style>

        <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource SquareIconWithTextButton}">
            <Setter Property="Tag" Value="&#xf0c7;" />
            <Setter Property="Content" Value="Save" />
        </Style>

        <!-- Modern TextBox Style -->
        <Style TargetType="TextBox" x:Key="EditorTextBox">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderBrush" Value="#e0e0e0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="#007bff" />
                                <Setter TargetName="PART_ContentHost" Property="BorderThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style for TextBlock - Left Aligned -->
        <Style x:Key="LeftAlignTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <!-- Modern ToggleButton Style -->
        <Style TargetType="ToggleButton" x:Key="ModernToggleButton">
            <Setter Property="Background" Value="#00263d" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="100" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Tag" Value="&#xf204;" />
            
            <!-- Default to Toggle Off icon -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock x:Name="Icon" FontFamily="pack://application:,,,/FontAwesome.WPF;component/#FontAwesome"
                                   Text="{TemplateBinding Tag}" 
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Margin="10,0,5,0"/>
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                          VerticalAlignment="Center" 
                                          Margin="5,0,10,0"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Icon" Property="Text" Value="&#xf205;" />
                                <!-- Toggle On icon -->
                                <Setter Property="Background" Value="#007bff" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Icon" Property="Text" Value="&#xf204;" />
                                <!-- Toggle Off icon -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for TextBlock -->
        <Style x:Key="StyledTextBlock" TargetType="TextBlock">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <!-- DataTemplate for leaf nodes (simple key/value pairs) -->
        <DataTemplate x:Key="JsonLeafTemplate" DataType="{x:Type models:JsonTreeItem}">
            <WrapPanel Orientation="Vertical" Margin="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Key, StringFormat={}{0} -}" FontWeight="Bold" Margin="0,0,2,0" Grid.Column="0"/>
                    <!-- Editable TextBox for values -->
                    <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource EditorTextBox}"
                             IsReadOnly="{Binding DataContext.IsEditable, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource InverseBooleanConverter}}"  
                             AcceptsReturn="True" 
                             TextWrapping="Wrap" 
                             Grid.Column="1" 
                             HorizontalAlignment="Stretch"/>
                </Grid>
            </WrapPanel>
        </DataTemplate>

        <!-- HierarchicalDataTemplate for group nodes with multiple children -->
        <HierarchicalDataTemplate x:Key="JsonGroupTemplate" DataType="{x:Type models:JsonTreeItem}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal" Margin="0">
                <Border Background="Gray" Margin="0,0,2,0" Width="5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Show the parent's key, a dot separator, then the child's key -->
                    <TextBlock Text="{Binding Key}" FontWeight="Bold"  Padding="5" Margin="0,0,2,0" Grid.Column="0" Style="{StaticResource LeftAlignTextBlock}"/>
                    <!-- Optional group indicator -->
                    <!--<TextBlock Text="(Group)" Foreground="Gray" Margin="0,0,5,0" Grid.Column="0"/>-->
                </Grid>
            </StackPanel>
        </HierarchicalDataTemplate>

        <!-- DataTemplate for flattened nodes: groups that have one child that is a leaf -->
        <DataTemplate x:Key="FlattenedLeafTemplate" DataType="{x:Type models:JsonTreeItem}">
            <WrapPanel Orientation="Vertical" Margin="0" Width="Auto">
                <Border Background="Red" Margin="0,0,2,0"  Width="5" Padding="0"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Show the parent's key, a dot separator, then the child's key -->
                    <TextBlock Text="{Binding Key, StringFormat={}{0} :}" 
                               FontWeight="Bold" 
                               Grid.Column="0" 
                               Style="{StaticResource LeftAlignTextBlock}" />

                    <!-- Editable TextBox for the child's value -->
                    <TextBox Text="{Binding Children[0].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource EditorTextBox}"
                             IsReadOnly="{Binding DataContext.IsEditable, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource InverseBooleanConverter}}" 
                             AcceptsReturn="True" 
                             TextWrapping="Wrap"
                             Grid.Column="1" 
                             HorizontalAlignment="Stretch" />
                </Grid>
            </WrapPanel>
        </DataTemplate>

        <!-- Instantiate the DataTemplateSelector and wire up the three templates -->
        <helper:JsonTreeItemTemplateSelector x:Key="JsonTreeItemTemplateSelector"
                                      LeafTemplate="{StaticResource JsonLeafTemplate}"
                                      GroupTemplate="{StaticResource JsonGroupTemplate}"
                                      FlattenedLeafTemplate="{StaticResource FlattenedLeafTemplate}" />
    </UserControl.Resources>

    <!-- Flexible Width -->
    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Top panel: File path and edit toggle -->
        <DockPanel>
            <StackPanel Orientation="Horizontal" Margin="5" Grid.Column="0" DockPanel.Dock="Left" HorizontalAlignment="Stretch">
                <TextBlock Text="File Path:" VerticalAlignment="Center" Style="{StaticResource StyledTextBlock}"/>
                <TextBlock Text="{Binding FilePath, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Margin="5,0,0,0" MinWidth="100" Style="{StaticResource StyledTextBlock}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5" Grid.Column="0" HorizontalAlignment="Stretch">
                <TextBlock Text="Loading..." 
                            Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" 
                            VerticalAlignment="Center" Margin="10,0,0,0"/>
                <TextBlock Text="{Binding ErrorMessage}" Foreground="Red" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5" Grid.Column="0" DockPanel.Dock="Right" HorizontalAlignment="Right">
                <Button Style="{StaticResource FolderOpenButtonStyle}" Command="{Binding LoadCommand}" />
                <Button Style="{StaticResource SaveButtonStyle}" Command="{Binding SaveCommand}" Margin="5,0,0,0" />
                
                <!--<CheckBox Content="Editable" IsChecked="{Binding IsEditable, Mode=TwoWay}" Margin="10,0,0,0"/>-->
                <ToggleButton Content="Editable" IsChecked="{Binding IsEditable, Mode=TwoWay}" Margin="10,0,0,0" Style="{StaticResource ModernToggleButton}" Tag="&#xf204;"/>

            </StackPanel>
        </DockPanel>
        <!-- Middle panel: JSON TreeView within a ScrollViewer -->
        <Border Grid.Row="1" Grid.Column="0" Margin="5" BorderBrush="Gray" BorderThickness="0" HorizontalAlignment="Stretch">
            <!--<ScrollViewer HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled">-->
                <TreeView ItemsSource="{Binding JsonTreeItems}" 
                          ScrollViewer.CanContentScroll="False"
                          ItemTemplateSelector="{StaticResource JsonTreeItemTemplateSelector}" 
                          HorizontalAlignment="Stretch" 
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            <!--</ScrollViewer>-->
        </Border>
    </Grid>
</UserControl>
